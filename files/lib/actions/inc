#!/usr/bin/env bash
# surrogate
# incremental backup function

function perform_action() {
  instance=$1
  
  if [ -z "$socket" ]; then
    socket_variable=mysql_socket_${instance}
    socket=${!socket_variable}
  fi

  echo "creating incremental backup"

  #perform incremental backup from where the last backup stoped
  innobackupex 				\
  --parallel=8 				\
  --user=$mysql_user 			\
  --password=$mysql_pass 			\
  --no-timestamp 				\
  --compress \
  --compress-threads=8 \
  --incremental 				\
  --incremental-basedir=$last_backup 	\
  --socket=$socket \
  --defaults-group="mysqld$instance" \
  $inc_backup_path 2> $logfile_i

  echo "checking if the backup completed sucsessfully"
  if ! tail $logfile_i -n 1 | grep completed.OK
  then
    rm -R $inc_backup_path
    echo "\nERROR: backup failed! (log: "$logfile_i")"
    echo "status=1" > $backup_directory/backup.status
    exit 1
  fi

  echo $inc_backup_path >> $backup_directory/.digest
  echo "status=0" > $backup_directory/backup.status
  echo "Backup Completed OK!"
  
  if tail $logfile_f -n 1 | grep completed.OK
  then
    echo "Creating archive for S3.."
    tar -czf /tmp/$(basename ${inc_backup_path}).tar.gz ${inc_backup_path}

    echo "Copying archive to S3"
    s3cmd put -e -f /tmp/$(basename ${inc_backup_path}).tar.gz s3://${s3bucket}$(dirname ${inc_backup_path})/

    echo "Removing cached archive"
    rm /tmp/$(basename ${inc_backup_path}).tar.gz
  fi
}

# fin
