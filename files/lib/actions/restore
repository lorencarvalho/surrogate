#!/usr/bin/env bash
# surrogate
# restoration function

function perform_action() {
  echo "restoring backup"

  if [ -z "$restore" ];
  then
    restore=$backup_directory/backups/.digest
  fi

  if [ -d $active_backup ];
  then
    rm -R $active_backup
  fi

  # full backup is the first in your index file
  full_backup=`head $restore -n 1`

  echo "copying full backup files: " $full_backup
  mkdir $active_backup
  cp -r $full_backup/* $active_backup

  for bf in `find $active_backup -iname "*\.qp"`; 
  do 
    qpress -d $bf $(dirname $bf) && rm -f $bf; 
  done

  echo "preparing full backup..."
  innobackupex 			\
  --ibbackup=xtrabackup_55 	\
  --parallel=4 			\
  --user=$mysql_user 		\
  --password=$mysql_pass 		\
  --apply-log 			\
  --redo-only $active_backup 2> $logfile_r

  # see if the apply-log completed sucsessfully
  if ! tail $logfile_r -n 1 | grep completed.OK
  then
    echo "\nERROR: restore failed! (log: "$logfile_r")"
    rm -R $active_backup
    exit 1
  fi

  # find the incrementals and loop restore them
  grep inc_ $restore | while read incremental_backup ; do

  if [ -d $active_incremental ];
  then
    rm -R $active_incremental
  fi

  echo "copying incremental backup: " $incremental_backup
  mkdir $active_incremental
  cp -r $incremental_backup/* $active_incremental

  for bf in `find $active_incremental -iname "*\.qp"`; 
  do 
    qpress -d $bf $(dirname $bf) && rm -f $bf; 
  done

  find $incremental_backup -name .delta -empty -maxdepth 2 -exec rm {} \;

  echo "preparing incremental backup..."
  innobackupex 			\
  --ibbackup=xtrabackup_55 	\
  --parallel=4 			\
  --user=$mysql_user 		\
  --password=$mysql_pass 		\
  --apply-log 			\
  --redo-only $active_backup 	\
  --incremental-dir=$active_incremental 2>> $logfile_r

  rm -R $active_incremental

  echo "check if the apply incremental completed sucsessfully"
  if ! tail $logfile_r -n 1 | grep completed.OK
  then
    echo "\nERROR: restore failed! (log: "$logfile_r")"
    rm -R $active_backup
    exit 1
  fi
  done

  echo "applying Logs"
  innobackupex 			\
  --ibbackup=xtrabackup_55 	\
  --parallel=4 			\
  --user=$mysql_user 		\
  --password=$mysql_pass 		\
  --apply-log $active_backup 2>> $logfile_r

  echo "check if the apply log completed sucsessfully"
  if ! tail $logfile_r -n 1 | grep completed.OK
  then
    echo "\nERROR: restore failed! (log: "$logfile_r")"
    rm -R $active_backup
    exit 1
  fi

  echo "stop mysql..."
  /etc/init.d/mysql stop
  echo "moving mysql data files..."
  rm -rf $mysql_sanity_path
  mv -f $mysql_data_path $mysql_sanity_path
  mkdir -p $mysql_data_path
  echo "restoring data files..."
  echo "calling innobackupex..."
  innobackupex 			\
  --ibbackup=xtrabackup_55 	\
  --user=$mysql_user 		\
  --password=$mysql_pass 		\
  --copy-back $active_backup 2>> $logfile_r

  echo "delete all log files to start fresh after restore"
  rm -R $mysql_log_path/*
  mkdir $mysql_log_path/bin

  echo "setting file permissions..."
  chmod 700 -R $mysql_data_path/ && chown mysql:mysql -R $mysql_data_path/
  chmod 700 -R $mysql_log_path/ && chown mysql:mysql -R $mysql_log_path/

  rm -R $active_backup/*
  rmdir $active_backup

  echo "restoration almost complete, starting mysql..."
  /etc/init.d/mysql start

  echo "Restore Completed OK!"
}

# fin
