#!/usr/bin/env bash

function perform_action() {
  instance=$1

  if [ -z "$socket" ]; then
    socket_variable=mysql_socket_${instance}
    socket=${!socket_variable}
  fi

  determine_full_backup_path
  if [ ! -d `dirname $full_backup_path` ]; then
    mkdir -p `dirname $full_backup_path`
  fi

  echo "creating full backup"

  innobackupex \
  --parallel=8 \
  --user=$mysql_user \
  --password=$mysql_pass \
  --no-timestamp \
  --compress \
  --compress-threads=8 \
  --socket=$socket \
  --defaults-group="mysqld$instance" \
  $full_backup_path 2> $logfile_f

  echo "checking if the backup completed sucsessfully"
  if ! tail $logfile_f -n 1 | grep completed.OK
  then
    if [ -z $full_backup_path ]; then
        rm -rf $full_backup_path
    fi
    echo "\nERROR: backup failed! (log: "$logfile_f")"
    echo "status=1" > $backup_directory/backup.status
    exit 1
  fi

  echo $full_backup_path > $backup_directory/.digest
  echo "status=0" > $backup_directory/backup.status
  echo "Backup Completed OK!"
  
  if tail $logfile_f -n 1 | grep completed.OK
  then
    echo "Creating archive for S3.."
    tar -czf /tmp/$(basename ${full_backup_path}).tar.gz ${last_backup}

    echo "Copying archive to S3"
    s3cmd put -e -f /tmp/$(basename ${full_backup_path}).tar.gz s3://${s3bucket}$(dirname ${full_backup_path})/

    echo "Removing cached archive"
    rm /tmp/$(basename ${full_backup_path}).tar.gz
  fi
} 
